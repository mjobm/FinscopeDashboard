hchfh
bbdbd
gdgdgd
bssbs
bsbsb
ggdd
hshs
bsbsb
install.packages("sparklyr")
spark_install(version = "2.1.0")
library("sparklyr")
spark_install(version = "2.1.0")
library("DBI")
library("ROracle")
library("sparklyr")
##### import data into sparkdataframe from mysql database
config <- spark_config()
config$`sparklyr.shell.driver-class-path` <-
"/Users/fridah/mysql-connector-java-5.1.44/mysql-connector-java-5.1.44-bin.jar"
sc <- spark_connect(master = "local",
version = "2.2.0",
config = config)
spark_install(version = "2.1.0")
library("DBI")
library("ROracle")
library("sparklyr")
config <- spark_config()
config$`sparklyr.shell.driver-class-path` <-
"/Users/fridah/mysql-connector-java-5.1.44/mysql-connector-java-5.1.44-bin.jar"
sc <- spark_connect(master = "local",
version = "2.1.0",
config = config)
## Way 1
spark_read_jdbc(sc, "campaigns", memory = FALSE,
options = list(url = "jdbc:mysql://localhost:3306/changadb",
user = "root", password = "wisdom",
dbtable = "cng_campaigns"))
install.packages("openssl")
##### import data into sparkdataframe from mysql database
config <- spark_config()
config$`sparklyr.shell.driver-class-path` <-
"/Users/fridah/mysql-connector-java-5.1.44/mysql-connector-java-5.1.44-bin.jar"
sc <- spark_connect(master = "local",
version = "2.1.0",
config = config)
## Way 1
spark_read_jdbc(sc, "campaigns", memory = FALSE,
options = list(url = "jdbc:mysql://localhost:3306/changadb",
user = "root", password = "wisdom",
dbtable = "cng_campaigns"))
##### import data into sparkdataframe from mysql database
config <- spark_config()
config$`sparklyr.shell.driver-class-path` <-
"/Users/fridah/mysql-connector-java-5.1.44/mysql-connector-java-5.1.44-bin.jar"
sc <- spark_connect(master = "local",
version = "2.1.0",
config = config)
## Way 1
spark_read_jdbc(sc, "campaigns", memory = FALSE,
options = list(url = "jdbc:mysql://localhost:3306/changadb",
user = "root", password = "wisdom",
dbtable = "cng_campaigns"))
install.packages("openssl")
##### import data into sparkdataframe from mysql database
config <- spark_config()
config$`sparklyr.shell.driver-class-path` <-
"/Users/fridah/mysql-connector-java-5.1.44/mysql-connector-java-5.1.44-bin.jar"
sc <- spark_connect(master = "local",
version = "2.1.0",
config = config)
## Way 1
spark_read_jdbc(sc, "campaigns", memory = FALSE,
options = list(url = "jdbc:mysql://localhost:3306/changadb",
user = "root", password = "wisdom",
dbtable = "cng_campaigns"))
library("DBI")
library("ROracle")
library("sparklyr")
drv <- dbDriver("Oracle")
## Refer to Oracle Database Net Services Administator's Guide for
## details on connect string specification.
host <- "138.68.227.67"
port <- 1521
svc <- "busarapdb"
connect.string.svc <- paste(
"(DESCRIPTION=",
"(ADDRESS=(PROTOCOL=tcp)(HOST=", host, ")(PORT=", port, "))",
"(CONNECT_DATA=(SERVICE_NAME=", svc, ")))", sep = "")
## Use username/password authentication.
con <- dbConnect(drv, username = "elijah", password = "busara2017",
dbname = connect.string.svc)
## List all tables in DB
dbListTables(con)
## Run a SQL statement by creating first a resultSet object.
rs <- dbSendQuery(con, "select * from EMPLOYEES")
## describing the schema for the emp table using dbGetInfo
dbGetInfo(rs, what = 'fields')
## We now fetch records from the resultSet into a data.frame.
data <- fetch(rs) ## extract all rows
dim(data)
# clear the result
dbClearResult(rs)
# disconnect from the database
dbDisconnect(con)
data <- 2
str(data)
data <- 3.3
str(data)
dir()
shiny::runApp('Box Sync/03 Financial Inclusion and Gender/04 FinScope Data - Confidential/FinscopeDashBoard')
temp.df <- as.data.frame(finScope.raw %>%
group_by_(.dots=c("gender", "use.formal") %>%
summarise(sample_count = n(),
pop_count = sum(Final_weight)) %>%
mutate(percent = round((pop_count*100/sum(pop_count)),2)) %>%
select(-sample_count, -pop_count))
)
temp.df <- as.data.frame(finScope.raw %>%
group_by_(.dots=c("gender", "use.formal")) %>%
summarise(sample_count = n(),
pop_count = sum(Final_weight)) %>%
mutate(percent = round((pop_count*100/sum(pop_count)),2)) %>%
select(-sample_count, -pop_count))
View(temp.df)
runApp('Box Sync/03 Financial Inclusion and Gender/04 FinScope Data - Confidential/FinscopeDashBoard')
library(readr)
#install.packages("RCurl", type="source")
library(RCurl)
data2 = scp(host = "simoh@172.16.0.226", path = "/Users/simoh/Desktop/sample-csv.csv",
keypasswd = "simoh", user = "simoh")
curlVersion()
url <- "ftp://simoh@172.16.0.226"
userpwd <- "simoh:simoh"
filenames <- getURL(url, userpwd = userpwd,
ftp.use.epsv = FALSE,dirlistonly = TRUE)
url <- "ftp://simoh@172.16.0.226"
userpwd <- "simoh:simoh"
filenames <- getURL(url, userpwd = userpwd,
ftp.use.epsv = FALSE,dirlistonly = TRUE)
filenames
d <- read.table(pipe('ssh -l simoh simoh@172.16.0.226 "/Users/simoh/Desktop/sample-csv.csv"'))
d <- 1:20
cut(d, breaks = c(5,12,16))
cut(d, breaks = c(1, 5,12,16))
cut(d, breaks = c(0, 5, 12, 16))
cut(d, breaks = c(0, 5, 12, 16, 20))
data2 = scp(host = "simoh@172.16.0.226", path = "/Users/simoh/Desktop/sample-csv.csv",
keypasswd = "simoh", user = "simoh")
data = read_csv(pipe('ssh simoh@172.16.0.226 "/Users/simoh/Desktop/sample-csv.csv"'))
d <- read_csv(pipe('ssh -l simoh simoh@172.16.0.226 "/Users/simoh/Desktop/sample-csv.csv"'))
d <- read_csv(pipe('ssh -l simoh simoh@172.16.0.226 "/Users/simoh/Desktop/sample-csv.csv"'))
d <- read_csv(pipe('ssh -l simoh simoh@172.16.0.226 "/Users/simoh/Desktop/sample-csv.csv"'))
d <- read_csv(pipe('ssh -l simoh simoh@172.16.0.226 "/Users/simoh/Desktop/sample-csv.csv"'))
stopCluster(cluster)
stopImplicitCluster()
install.packages("rpart")
runif(30)
runif(10)
runif(20)
summary(runif(20))
summary(runif(10))
summary(runif(10))
summary(runif(10))
summary(runif(10))
summary(runif(10))
summary(runif(10))
summary(runif(10))
summary(runif(10))
summary(runif(10))
summary(runif(10))
summary(runif(10))
summary(runif(20))
summary(runif(20))
summary(runif(5))
summary(runif(10))
summary(runif(5))
summary(runif(5))
summary(runif(5))
summary(runif(5))
getwd()
shiny::runApp('Box Sync/03 Financial Inclusion and Gender/04 FinScope Data - Confidential/FinscopeDashBoard')
if(!"pacman" %in% installed.packages()[,1]){install.packages("pacman")}
pacman::p_load(pkgs, character.only = T, install = F, dependencies = TRUE)
install.packages("shiny")
install.packages("bindrcpp")
install.packages("colorspace")
install.packages("ggplot2")
install.packages("crosstalk")
install.packages("broom")
install.packages("dplyr")
install.packages("Hmisc")
install.packages("leaflet")
install.packages("highcharter")
install.packages("ggmap")
install.packages("tmap")
install.packages("tidyverse")
install.packages("cellranger")
install.packages("tidyverse")
shiny::runApp('Box Sync/03 Financial Inclusion and Gender/04 FinScope Data - Confidential/FinscopeDashBoard')
#devtools::install_github('hadley/ggplot2')
pkgs <- c("dplyr", "foreign", "Hmisc", "data.table", "broom","stringi",
"haven", "shiny", "shinydashboard", "leaflet", "tools","purrr","assertthat",
"highcharter", "tidyr", "RColorBrewer", "ggmap", "rgdal", "rgeos",
"maptools", "dplyr", "tmap", "sp","tidyverse", "weights", "rlang", "dummies")
if(!"pacman" %in% installed.packages()[,1]){install.packages("pacman")}
pacman::p_load(pkgs, character.only = T, install = F, dependencies = TRUE)
#pacman::p_unload("plyr")
install.packages("curl")
install.packages("dichromat")
install.packages("highcharter")
install.packages("tmap")
#devtools::install_github('hadley/ggplot2')
pkgs <- c("dplyr", "foreign", "Hmisc", "data.table", "broom","stringi",
"haven", "shiny", "shinydashboard", "leaflet", "tools","purrr","assertthat",
"highcharter", "tidyr", "RColorBrewer", "ggmap", "rgdal", "rgeos",
"maptools", "dplyr", "tmap", "sp","tidyverse", "weights", "rlang", "dummies")
if(!"pacman" %in% installed.packages()[,1]){install.packages("pacman")}
pacman::p_load(pkgs, character.only = T, install = F, dependencies = TRUE)
#pacman::p_unload("plyr")
install.packages("bitops")
#devtools::install_github('hadley/ggplot2')
pkgs <- c("dplyr", "foreign", "Hmisc", "data.table", "broom","stringi",
"haven", "shiny", "shinydashboard", "leaflet", "tools","purrr","assertthat",
"highcharter", "tidyr", "RColorBrewer", "ggmap", "rgdal", "rgeos",
"maptools", "dplyr", "tmap", "sp","tidyverse", "weights", "rlang", "dummies")
if(!"pacman" %in% installed.packages()[,1]){install.packages("pacman")}
pacman::p_load(pkgs, character.only = T, install = F, dependencies = TRUE)
#pacman::p_unload("plyr")
install.packages("deldir")
#devtools::install_github('hadley/ggplot2')
pkgs <- c("dplyr", "foreign", "Hmisc", "data.table", "broom","stringi",
"haven", "shiny", "shinydashboard", "leaflet", "tools","purrr","assertthat",
"highcharter", "tidyr", "RColorBrewer", "ggmap", "rgdal", "rgeos",
"maptools", "dplyr", "tmap", "sp","tidyverse", "weights", "rlang", "dummies")
if(!"pacman" %in% installed.packages()[,1]){install.packages("pacman")}
pacman::p_load(pkgs, character.only = T, install = F, dependencies = TRUE)
#pacman::p_unload("plyr")
install.packages("coda")
#devtools::install_github('hadley/ggplot2')
pkgs <- c("dplyr", "foreign", "Hmisc", "data.table", "broom","stringi",
"haven", "shiny", "shinydashboard", "leaflet", "tools","purrr","assertthat",
"highcharter", "tidyr", "RColorBrewer", "ggmap", "rgdal", "rgeos",
"maptools", "dplyr", "tmap", "sp","tidyverse", "weights", "rlang", "dummies")
if(!"pacman" %in% installed.packages()[,1]){install.packages("pacman")}
pacman::p_load(pkgs, character.only = T, install = F, dependencies = TRUE)
#pacman::p_unload("plyr")
runApp('Box Sync/03 Financial Inclusion and Gender/04 FinScope Data - Confidential/FinscopeDashBoard')
